version: '3.9'

networks:
  ethernal:
    driver: bridge  

volumes:
  db:
    driver: local
  redis:
    driver: local

services:
  postgres:
    networks:
      - ethernal
    image: postgres:14.1-alpine
    restart: always
    env_file: .env.prod
    volumes: 
      - db:/var/lib/postgresql/data

  redis:
    networks:
      - ethernal
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - redis:/data

  frontend:
    networks:
      - ethernal
    image: antoinedc44/ethernal-frontend:latest
    restart: always
    env_file: ./.env.prod

  backend:
    networks:
      - ethernal
    image: antoinedc44/ethernal-backend:latest
    depends_on:
      - postgres
      - redis
    restart: always
    ports:
      - '8888:8888'
    env_file: ./run/.env.prod

  high_priority_worker:
    networks:
      - ethernal
    container_name: highPriority
    depends_on:
      - postgres
      - redis
    restart: always
    image: antoinedc44/ethernal-backend:latest
    command: node workers/highPriority.js
    env_file: ./run/.env.prod

  medium_priority_worker:
    networks:
      - ethernal
    container_name: mediumPriority
    depends_on:
      - postgres
      - redis
    restart: always
    image: antoinedc44/ethernal-backend:latest
    command: node workers/mediumPriority.js
    env_file: ./run/.env.prod

  low_priority_worker:
    networks:
      - ethernal
    container_name: lowPriority
    depends_on:
      - postgres
      - redis
    restart: always
    image: antoinedc44/ethernal-backend:latest
    command: node workers/lowPriority.js
    env_file: ./run/.env.prod

  pm2:
    networks:
      - ethernal
    image: antoinedc44/ethernal-pm2:latest
    container_name: pm2
    working_dir: /app
    volumes:
      - ./pm2-server:/app
    ports:
      - "80:8080"
    env_file: ./pm2-server/.env.prod

  pgbouncer:
    image: edoburu/pgbouncer
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - AUTH_TYPE=scram-sha-256
      - POOL_MODE=transaction
      - ADMIN_USERS=${POSTGRES_USER:-postgres},admin
      - MAX_CLIENT_CONN=1000
    ports:
      - "5433:5432"
    depends_on:
      - postgres
    networks:
      - ethernal

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    depends_on:
      - backend
    networks:
      - ethernal
    ports:
      - "${EXPOSED_PORT}:80"
    volumes:
      - ./nginx.conf.prod:/etc/nginx/conf.d/default.conf:ro
