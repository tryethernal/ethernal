networks:
  ethernal:
    driver: bridge  

volumes:
  db:
    driver: local
  redis:
    driver: local

services:
  postgres:
    networks:
      - ethernal
    image: timescale/timescaledb:2.11.1-pg14
    restart: always
    env_file: .env.postgres.prod
    volumes: 
      - db:/var/lib/postgresql/data

  soketi:
    image: quay.io/soketi/soketi:1.6.1-16-debian
    ports:
      - "6001:6001"
    env_file: ./run/.env.prod
    networks:
      - ethernal

  redis:
    networks:
      - ethernal
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - redis:/data

  frontend:
    networks:
      - ethernal
    image: antoinedc44/ethernal-frontend:latest
    restart: always

  backend:
    networks:
      - ethernal
    image: antoinedc44/ethernal-backend:latest
    depends_on:
      - postgres
      - redis
    restart: always
    env_file: ./run/.env.prod

  high_priority_worker:
    networks:
      - ethernal
    container_name: highPriority
    depends_on:
      - postgres
      - redis
    restart: always
    image: antoinedc44/ethernal-backend:latest
    command: node workers/highPriority.js
    env_file: ./run/.env.prod

  medium_priority_worker:
    networks:
      - ethernal
    container_name: mediumPriority
    depends_on:
      - postgres
      - redis
    restart: always
    image: antoinedc44/ethernal-backend:latest
    command: node workers/mediumPriority.js
    env_file: ./run/.env.prod

  low_priority_worker:
    networks:
      - ethernal
    container_name: lowPriority
    depends_on:
      - postgres
      - redis
    restart: always
    image: antoinedc44/ethernal-backend:latest
    command: node workers/lowPriority.js
    env_file: ./run/.env.prod

  pm2:
    networks:
      - ethernal
    image: antoinedc44/ethernal-pm2:latest
    container_name: pm2
    env_file: ./pm2-server/.env.prod
    depends_on:
      - backend

  pgbouncer:
    image: edoburu/pgbouncer
    ports:
      - "5433:5433"
    env_file: ./pgbouncer/.env.pgbouncer.prod
    volumes:
      - ./pgbouncer/:/etc/pgbouncer:ro
    depends_on:
      - postgres
    networks:
      - ethernal

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    depends_on:
      - backend
    networks:
      - ethernal
    ports:
      - "${EXPOSED_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
