version: "3.9"

volumes:
  postgres:
    driver: local
  redis:
    driver: local

services:
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis:/data

  postgres:
    image: timescale/timescaledb-ha:pg14
    restart: always
    volumes:
      - postgres:/home/postgres/pgdata/data
    environment:
      - POSTGRES_PASSWORD=postgres

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - AUTH_TYPE=scram-sha-256
      - POOL_MODE=transaction
      - ADMIN_USERS=postgres,admin
      - MAX_CLIENT_CONN=1000
    ports:
      - "5433:5432"
    depends_on:
      - postgres

  web: &backend
    volumes:
      - ./run/:/app
      - type: bind
        source: ./run/.env
        target: /app/run/.env
    depends_on:
      - postgres
      - redis
    build:
      context: .
      dockerfile: Dockerfile
      target: dev_back
    ports:
      - "8888:8888"
    env_file: run/.env
    command: nodemon index.js

  high_priority_worker:
    <<: *backend
    ports: []
    command: nodemon workers/highPriority.js

  medium_priority_worker:
    <<: *backend
    ports: []
    command: nodemon workers/mediumPriority.js

  low_priority_worker:
    <<: *backend
    ports: []
    command: nodemon workers/lowPriority.js

  front:
    extra_hosts:
      - "app.ethernal.local:0.0.0.0"
      - "*.ethernal.explorer:0.0.0.0"
    depends_on:
      - web
    ports:
      - "8080:8080"
    volumes:
      - ./public:/app/public
      - ./src:/app/src
      - type: bind
        source: package.json
        target: /app/package.json
      - type: bind
        source: yarn.lock
        target: /app/yarn.lock
    build:
      context: .
      dockerfile: Dockerfile.front
    env_file: .env

  pm2:
    ports:
      - "9090:9090"
    volumes:
      - ./pm2-server:/app
    depends_on:
      - web
    build:
      context: .
      dockerfile: Dockerfile.pm2
      target: dev
    env_file: pm2-server/.env

  soketi:
    image: quay.io/soketi/soketi:1.4-16-debian
    ports:
      - "6001:6001"
    env_file: run/.env

  stripe:
    image: stripe/stripe-cli
    command: listen --forward-to http://web:8888/webhooks/stripe
    env_file: .env.stripe
