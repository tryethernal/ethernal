version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ethernal-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8888:8888"
    env_file: ./run/.env
    depends_on:
      - postgres
      - redis
      - soketi
    networks:
      - ethernal-network

  high_priority_worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: node workers/highPriority.js
    env_file: ./run/.env
    depends_on:
      - postgres
      - redis
    networks:
      - ethernal-network

  medium_priority_worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: node workers/mediumPriority.js
    env_file: ./run/.env
    depends_on:
      - postgres
      - redis
    networks:
      - ethernal-network

  low_priority_worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: node workers/lowPriority.js
    env_file: ./run/.env
    depends_on:
      - postgres
      - redis
    networks:
      - ethernal-network

  postgres:
    image: timescale/timescaledb:2.11.1-pg14
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-ethernal}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ethernal-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ethernal-network

  soketi:
    image: quay.io/soketi/soketi:1.6.1-16-debian
    ports:
      - "6001:6001"
    env_file: ./run/.env
    networks:
      - ethernal-network

networks:
  ethernal-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
